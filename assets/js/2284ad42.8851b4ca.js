"use strict";(self.webpackChunk_n1mbly_docs=self.webpackChunk_n1mbly_docs||[]).push([[35],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>v});var r=t(7294);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var s=r.createContext({}),o=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=o(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,c=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=o(t),v=c,b=p["".concat(s,".").concat(v)]||p[v]||m[v]||l;return t?r.createElement(b,a(a({ref:n},u),{},{components:t})):r.createElement(b,a({ref:n},u))}));function v(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var l=t.length,a=new Array(l);a[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:c,a[1]=i;for(var o=2;o<l;o++)a[o]=t[o];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(7294);const c=function(e){let{children:n,hidden:t,className:c}=e;return r.createElement("div",{role:"tabpanel",hidden:t,className:c},n)}},9877:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(7462),c=t(7294),l=t(2389),a=t(5773),i=t(6010);const s="tabItem_LplD";function o(e){const{lazy:n,block:t,defaultValue:l,values:o,groupId:u,className:m}=e,p=c.Children.map(e.children,(e=>{if((0,c.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=o??p.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),b=(0,a.lx)(v,((e,n)=>e.value===n.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const d=null===l?l:l??p.find((e=>e.props.default))?.props.value??p[0]?.props.value;if(null!==d&&!v.some((e=>e.value===d)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${d}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:h}=(0,a.UB)(),[y,g]=(0,c.useState)(d),S=[],{blockElementScrollPositionUntilNextRender:N}=(0,a.o5)();if(null!=u){const e=f[u];null!=e&&e!==y&&v.some((n=>n.value===e))&&g(e)}const k=e=>{const n=e.currentTarget,t=S.indexOf(n),r=v[t].value;r!==y&&(N(n),g(r),null!=u&&h(u,r))},A=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;n=S[t]||S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;n=S[t]||S[S.length-1];break}}n?.focus()};return c.createElement("div",{className:"tabs-container"},c.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":t},m)},v.map((e=>{let{value:n,label:t,attributes:l}=e;return c.createElement("li",(0,r.Z)({role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,key:n,ref:e=>S.push(e),onKeyDown:A,onFocus:k,onClick:k},l,{className:(0,i.Z)("tabs__item",s,l?.className,{"tabs__item--active":y===n})}),t??n)}))),n?(0,c.cloneElement)(p.filter((e=>e.props.value===y))[0],{className:"margin-vert--md"}):c.createElement("div",{className:"margin-vert--md"},p.map(((e,n)=>(0,c.cloneElement)(e,{key:n,hidden:e.props.value!==y})))))}function u(e){const n=(0,l.Z)();return c.createElement(o,(0,r.Z)({key:String(n)},e))}},3532:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var r=t(7462),c=(t(7294),t(3905)),l=t(9877),a=t(8215);const i={title:"Nimble",sidebar_position:7,slug:"/nimble/"},s=void 0,o={unversionedId:"categories/nimble",id:"categories/nimble",title:"Nimble",description:"What Nibmle is",source:"@site/docs/categories/nimble.md",sourceDirName:"categories",slug:"/nimble/",permalink:"/docs/docs/v1/nimble/",tags:[],version:"current",lastUpdatedAt:1654282889,formattedLastUpdatedAt:"6/3/2022",sidebarPosition:7,frontMatter:{title:"Nimble",sidebar_position:7,slug:"/nimble/"},sidebar:"sidebar",previous:{title:"Types Configuration",permalink:"/docs/docs/v1/service-class-types-config/"},next:{title:"NimblyApi",permalink:"/docs/docs/v1/nimbly-api/"}},u=[{value:"What Nibmle is",id:"what-nibmle-is",children:[],level:2},{value:"Local Services",id:"local-services",children:[],level:2},{value:"Remote Services",id:"remote-services",children:[],level:2}],m={toc:u};function p(e){let{components:n,...t}=e;return(0,c.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"what-nibmle-is"},"What Nibmle is"),(0,c.kt)("p",null,"Nimble holds a set of related service classes. It is responsible for handling their lifecycle and managing their dependencies."),(0,c.kt)("p",null,"Nimble can hold ",(0,c.kt)("a",{parentName:"p",href:"#local-services"},"Local")," or ",(0,c.kt)("a",{parentName:"p",href:"#remote-services"},"Remote")," services."),(0,c.kt)("h2",{id:"local-services"},"Local Services"),(0,c.kt)("p",null,"Local services are ones that are running in the same process as Nimble."),(0,c.kt)(l.Z,{groupId:"lang",mdxType:"Tabs"},(0,c.kt)(a.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'const { Nimble } = require("nimbly-client"); // or "nimbly-api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll() {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the Nimble \nconst nimble = new Nimble().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,c.kt)(a.Z,{value:"mjs",label:"ES modules",mdxType:"TabItem"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll() {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the Nimble \nconst nimble = new Nimble().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,c.kt)(a.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\ntype NimbleServices = {\n  userService: UserService;\n  accountService: AccountService;\n}\n\nclass UserService {\n  async getAll(): any[] {\n    return [];\n  }\n}\n\nclass AccountService {\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAll(): any[] {\n    const accounts = [];\n    const users = await this.userService.getAll();\n    return users.map(user => ({\n      ...user,\n      account: accounts.find(acc => acc.id === user.accountId)\n    }));\n  }\n}\n\n// Creating the Nimble \nconst nimble = new Nimble().addLocalServices(UserService, AccountService);\n\n// Getting the services out of the Nimble\nconst { accountService }: NimbleServices = nimble.getAllServices();\n')))),(0,c.kt)("h2",{id:"remote-services"},"Remote Services"),(0,c.kt)("p",null,"Remote services are, as the name suggests, running in a different process, or on a different server. Methods of a remote service, that is in a Nimble do not require any implementation code, but do require the URL of the server they are running on."),(0,c.kt)(l.Z,{groupId:"lang",mdxType:"Tabs"},(0,c.kt)(a.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'const { Nimble } = require("nimbly-client"); // or "nimbly-api"\n\nclass UserService {\n  async getAll() {}\n}\n\nclass AccountService {\n  async getAll() {}\n}\n\n// Creating the Nimble \nconst nimble = new Nimble()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,c.kt)(a.Z,{value:"mjs",label:"ES modules",mdxType:"TabItem"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\nclass UserService {\n  async getAll() {\n    return [];\n  }\n}\n\nclass AccountService {\n  async getAll() {}\n}\n\n// Creating the Nimble \nconst nimble = new Nimble()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the Nimble.\nconst { accountService } = nimble.getAllServices();\n'))),(0,c.kt)(a.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},'import { Nimble } from "nimbly-client"; // or "nimbly-api"\n\ntype NimbleServices = {\n  userService: UserService;\n  accountService: AccountService;\n}\n\nclass UserService {\n  async getAll(): any[] {}\n}\n\nclass AccountService {\n  async getAll(): any[] {}\n}\n\n// Creating the Nimble \nconst nimble = new Nimble()\n  .addRemoteServices("http://localhost:3000", UserService, AccountService);\n\n// Getting the services out of the Nimble\nconst { accountService }: NimbleServices = nimble.getAllServices();\n')))),(0,c.kt)("p",null,"Nimble implicitly creates a ",(0,c.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"Proxy")," for each service that gets the results of method calls over HTTP."))}p.isMDXComponent=!0}}]);