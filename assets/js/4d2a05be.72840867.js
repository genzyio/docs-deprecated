"use strict";(self.webpackChunk_n1mbly_docs=self.webpackChunk_n1mbly_docs||[]).push([[651],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,c=function(e,n){if(null==e)return{};var t,r,c={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var o=r.createContext({}),i=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=i(e.components);return r.createElement(o.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,c=e.mdxType,a=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=i(t),m=c,v=p["".concat(o,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(v,s(s({ref:n},u),{},{components:t})):r.createElement(v,s({ref:n},u))}));function m(e,n){var t=arguments,c=n&&n.mdxType;if("string"==typeof e||c){var a=t.length,s=new Array(a);s[0]=p;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l.mdxType="string"==typeof e?e:c,s[1]=l;for(var i=2;i<a;i++)s[i]=t[i];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(7294);const c=function(e){let{children:n,hidden:t,className:c}=e;return r.createElement("div",{role:"tabpanel",hidden:t,className:c},n)}},9877:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(7462),c=t(7294),a=t(2389),s=t(5773),l=t(6010);const o="tabItem_LplD";function i(e){const{lazy:n,block:t,defaultValue:a,values:i,groupId:u,className:d}=e,p=c.Children.map(e.children,(e=>{if((0,c.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),m=i??p.map((e=>{let{props:{value:n,label:t,attributes:r}}=e;return{value:n,label:t,attributes:r}})),v=(0,s.lx)(m,((e,n)=>e.value===n.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===a?a:a??p.find((e=>e.props.default))?.props.value??p[0]?.props.value;if(null!==h&&!m.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${m.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:f}=(0,s.UB)(),[y,g]=(0,c.useState)(h),S=[],{blockElementScrollPositionUntilNextRender:A}=(0,s.o5)();if(null!=u){const e=b[u];null!=e&&e!==y&&m.some((n=>n.value===e))&&g(e)}const k=e=>{const n=e.currentTarget,t=S.indexOf(n),r=m[t].value;r!==y&&(A(n),g(r),null!=u&&f(u,r))},N=e=>{let n=null;switch(e.key){case"ArrowRight":{const t=S.indexOf(e.currentTarget)+1;n=S[t]||S[0];break}case"ArrowLeft":{const t=S.indexOf(e.currentTarget)-1;n=S[t]||S[S.length-1];break}}n?.focus()};return c.createElement("div",{className:"tabs-container"},c.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":t},d)},m.map((e=>{let{value:n,label:t,attributes:a}=e;return c.createElement("li",(0,r.Z)({role:"tab",tabIndex:y===n?0:-1,"aria-selected":y===n,key:n,ref:e=>S.push(e),onKeyDown:N,onFocus:k,onClick:k},a,{className:(0,l.Z)("tabs__item",o,a?.className,{"tabs__item--active":y===n})}),t??n)}))),n?(0,c.cloneElement)(p.filter((e=>e.props.value===y))[0],{className:"margin-vert--md"}):c.createElement("div",{className:"margin-vert--md"},p.map(((e,n)=>(0,c.cloneElement)(e,{key:n,hidden:e.props.value!==y})))))}function u(e){const n=(0,a.Z)();return c.createElement(i,(0,r.Z)({key:String(n)},e))}},2849:(e,n,t)=>{t.r(n),t.d(n,{contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var r=t(7462),c=(t(7294),t(3905)),a=t(9877),s=t(8215);const l={title:"Introduction",sidebar_position:1,slug:"/"},o=void 0,i={unversionedId:"categories/Introduction/index",id:"categories/Introduction/index",title:"Introduction",description:"What N1mbly is",source:"@site/docs/categories/01-Introduction/index.md",sourceDirName:"categories/01-Introduction",slug:"/",permalink:"/docs/docs/v1/",tags:[],version:"current",lastUpdatedAt:1654282889,formattedLastUpdatedAt:"6/3/2022",sidebarPosition:1,frontMatter:{title:"Introduction",sidebar_position:1,slug:"/"},sidebar:"sidebar",next:{title:"How it works",permalink:"/docs/docs/v1/how-it-works/"}},u=[{value:"What N1mbly is",id:"what-n1mbly-is",children:[{value:"Server",id:"server",children:[],level:4},{value:"Server",id:"server-1",children:[],level:4},{value:"Server",id:"server-2",children:[],level:4},{value:"Client",id:"client",children:[],level:4},{value:"Client",id:"client-1",children:[],level:4},{value:"Client",id:"client-2",children:[],level:4}],level:2},{value:"Features",id:"features",children:[{value:"API",id:"api",children:[],level:3},{value:"Client",id:"client-3",children:[],level:3},{value:"Automatic JS/TS Client generation",id:"automatic-jsts-client-generation",children:[],level:3},{value:"Interceptors",id:"interceptors",children:[],level:3},{value:"Automatic OpenAPI docs",id:"automatic-openapi-docs",children:[],level:3}],level:2},{value:"Next steps",id:"next-steps",children:[],level:2}],d={toc:u};function p(e){let{components:n,...t}=e;return(0,c.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"what-n1mbly-is"},"What N1mbly is"),(0,c.kt)("p",null,"N1mbly is a JavaScript library that enables rapid development of web applications."),(0,c.kt)("p",null,"It is built on top of the ",(0,c.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express")," framework and provides additional features like automatic routes registration, client code generation and ",(0,c.kt)("a",{parentName:"p",href:"https://www.openapis.org/"},"OpenAPI")," documentation, along with ",(0,c.kt)("a",{parentName:"p",href:"https://swagger.io/"},"SwaggerUI"),"."),(0,c.kt)("p",null,"Here's a basic example:"),(0,c.kt)(a.Z,{groupId:"lang",mdxType:"Tabs"},(0,c.kt)(s.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,c.kt)("h4",{id:"server"},"Server"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"const { Nimble, NimblyApi } = require('nimbly-api');\n\nclass UserService {\n  async createUser(user) {\n    // logic for adding the user\n    return user;\n  }\n}\n\nclass AccountService {\n  // UserService is automatically injected\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAllAccounts() {\n    return [];\n  }\n\n  // take accountInfo object as parameter \n  async createAccount({username}) {\n    // logic for adding the account\n    const newAccount = {id: 1, username};\n    // call another service\n    this.userService.createUser({ accountId: newAccount.id })\n    return newAccount;\n  }\n}\n\nconst usersNimble = new Nimble()\n  .addLocalServices(UserService, AccountService);\n\nconst app = new NimblyApi().from(usersNimble);\napp.listen(3000);\n"))),(0,c.kt)(s.Z,{value:"js",label:"ES modules",default:!0,mdxType:"TabItem"},(0,c.kt)("h4",{id:"server-1"},"Server"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import { Nimble, NimblyApi } from 'nimbly-api';\n\nclass UserService {\n  async createUser(user) {\n    // logic for adding the user\n    return user;\n  }\n}\n\nclass AccountService {\n  // UserService is automatically injected\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  async getAllAccounts() {\n    return [];\n  }\n\n  // take accountInfo object as parameter \n  async createAccount({username}) {\n    // logic for adding the account\n    const newAccount = {id: 1, username};\n    // call another service\n    this.userService.createUser({ accountId: newAccount.id })\n    return newAccount;\n  }\n}\n\nconst usersNimble = new Nimble()\n  .addLocalServices(UserService, AccountService);\n\nconst app = new NimblyApi().from(usersNimble);\napp.listen(3000);\n"))),(0,c.kt)(s.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,c.kt)("h4",{id:"server-2"},"Server"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { Nimble, NimblyApi, Controller, Post, Get } from 'nimbly-api';\n\n@Controller('/users')\nclass UserService {\n  @Post()\n  async createUser(user) {\n    // logic for adding the user\n    return user;\n  }\n}\n\n@Controller('/accounts')\nclass AccountService {\n  // UserService is automatically injected\n  constructor({ userService }) {\n    this.userService = userService;\n  }\n\n  @Get('/all')\n  async getAllAccounts() {\n    return [];\n  }\n\n  // take accountInfo object as parameter \n  async createAccount({username}) {\n    // logic for adding the account\n    const newAccount = {id: 1, username};\n    // call another service\n    this.userService.createUser({ accountId: newAccount.id })\n    return newAccount;\n  }\n}\n\nconst usersNimble = new Nimble()\n  .addLocalServices(UserService, AccountService);\n\nconst app = new NimblyApi().from(usersNimble);\napp.listen(3000);\n")))),(0,c.kt)(a.Z,{groupId:"lang",mdxType:"Tabs"},(0,c.kt)(s.Z,{value:"cjs",label:"CommonJS",default:!0,mdxType:"TabItem"},(0,c.kt)("h4",{id:"client"},"Client"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"const { Nimble } = require('nimbly-client');\n\nconst host = 'http://localhost:3000';\n\nclass UserService {\n  async createUser(user) {}\n}\n\nclass AccountService {\n  async getAllAccounts() {}\n  async createAccount(account) {}\n}\n\nconst usersNimble = new Nimble()\n  .addRemoteServices(host, UserService, AccountService);\n\n// The instances are available for custom usage\nconst { userService, accountService } = usersNimble.getAllServices();\n\n// Use the services\naccountService.createAccount({\n  username: 'test',\n})\n.then(newAccount => console.log(newAccount)) // created account from server\n.catch(error => console.log(error));\n\n// Fetch all accounts\nconst allAccounts = await accountService.getAllAccounts();\n"))),(0,c.kt)(s.Z,{value:"js",label:"ES modules",default:!0,mdxType:"TabItem"},(0,c.kt)("h4",{id:"client-1"},"Client"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-js"},"import { Nimble } from 'nimbly-client';\n\nconst host = 'http://localhost:3000';\n\nclass UserService {\n  async createUser(user) {}\n}\n\nclass AccountService {\n  async getAllAccounts() {}\n  async createAccount(account) {}\n}\n\nconst usersNimble = new Nimble()\n  .addRemoteServices(host, UserService, AccountService);\n\n// The instances are available for custom usage\nconst { userService, accountService } = usersNimble.getAllServices();\n\n// Use the services\naccountService.createAccount({\n  username: 'test',\n})\n.then(newAccount => console.log(newAccount)) // created account from server\n.catch(error => console.log(error));\n\n// Fetch all accounts\nconst allAccounts = await accountService.getAllAccounts();\n"))),(0,c.kt)(s.Z,{value:"ts",label:"TypeScript",default:!0,mdxType:"TabItem"},(0,c.kt)("h4",{id:"client-2"},"Client"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-ts"},"import { Nimble, Controller, Post, Get } from 'nimbly-client';\n\nconst host = 'http://localhost:3000';\n\n// With TS you can use decorators\n@Controller('/users')\nclass UserService {\n  @Post()\n  async createUser(user) {}\n}\n\n@Controller('/accounts')\nclass AccountService {\n  @Get('/all')\n  async getAllAccounts() {}\n  async createAccount(account) {}\n}\n\nconst usersNimble = new Nimble()\n  .addRemoteServices(host, UserService, AccountService);\n\ntype NimblyServices = {\n  userService: UserService,\n  accountService: AccountService\n}\n\n// The instances are available for custom usage\nconst { userService, accountService }: NimblyServices = usersNimble.getAllServices();\n\n// Use the services\naccountService.createAccount({\n  username: 'test',\n})\n.then(newAccount => console.log(newAccount)) // created account from server\n.catch(error => console.log(error));\n\n// Fetch all accounts\nconst allAccounts = await accountService.getAllAccounts();\n")))),(0,c.kt)("h2",{id:"features"},"Features"),(0,c.kt)("p",null,"Here are the features provided by N1mbly:"),(0,c.kt)("h3",{id:"api"},"API"),(0,c.kt)("p",null,"Express Application is automatically created based on the service classes passed to the Nimble."),(0,c.kt)("h3",{id:"client-3"},"Client"),(0,c.kt)("p",null,"Client service proxy is automatically created based on the service classes passed to the Nimble."),(0,c.kt)("h3",{id:"automatic-jsts-client-generation"},"Automatic JS/TS Client generation"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"nimbly-client")," package can be used to auto-generate client service files for the existing API."),(0,c.kt)("h3",{id:"interceptors"},"Interceptors"),(0,c.kt)("p",null,"Both Server and Client support defining interceptors. Most common use case for interceptors is handling Authorization, where the client sends a secret with an identity and the server validates it."),(0,c.kt)("h3",{id:"automatic-openapi-docs"},"Automatic OpenAPI docs"),(0,c.kt)("p",null,"Server automatically builds ",(0,c.kt)("a",{parentName:"p",href:"https://www.openapis.org/"},"OpenAPI")," documentation, and serves ",(0,c.kt)("a",{parentName:"p",href:"https://swagger.io/"},"SwaggerUI")," on route ",(0,c.kt)("inlineCode",{parentName:"p"},"/explorer"),"."),(0,c.kt)("h2",{id:"next-steps"},"Next steps"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"/docs/docs/v1/server-installation/"},"Server installation")),(0,c.kt)("li",{parentName:"ul"},(0,c.kt)("a",{parentName:"li",href:"/docs/docs/v1/client-installation/"},"Client installation"))))}p.isMDXComponent=!0}}]);